configfile: "input.yaml"

from pathlib import Path
fp = Path(config["fastq_filepath"])
assert "_R1" in fp.name, "Invalid read file! Please ensure _R1 and/or _R2 are marked as such..."
sample_name = fp.name.replace("_R1", "").replace("_R2", "")

rule all:
    input: f"data/interim/{sample_name}_nonhost_contigs.fasta"

subworkflow filter_out_nonhost:
    snakefile: "rules/1_filer_out_nonhost.smk"

rule contig_assembly:
    input: 
        filter_out_nonhost("../data/interim/{sample}_nonhost.fq")
    output:
        "data/interim/{sample}_nonhost_contigs.fasta"
    params:
        workdir="data/interim/{sample}_spades_workdir"
    conda:
        "envs/spades.yaml"
    shell:
        "spades.py --rna --s1 {input} -o {params.workdir} "
        "&& mv {params.workdir}/soft_filtered_transcripts.fasta {output} "
        "&& rm -rf {params.workdir}"
